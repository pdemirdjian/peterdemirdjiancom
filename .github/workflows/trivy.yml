# This workflow uses Trivy to scan for security vulnerabilities and misconfigurations
# Trivy is a comprehensive security scanner that can detect:
# - Vulnerabilities in OS packages and language-specific packages
# - IaC misconfigurations
# - Secrets and sensitive information
# - Software licenses

name: Trivy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Run daily at 2:30 AM UTC
    - cron: '30 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  trivy-repo-scan:
    name: Trivy Repository Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Don't fail the build on vulnerabilities
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@e296a935590eb16afc0c0108289f68c87e2a89a5 # v4.30.7
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  trivy-config-scan:
    name: Trivy Configuration Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy misconfiguration scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
          exit-code: '0'  # Don't fail the build on misconfigurations
          
      - name: Upload Trivy config scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@e296a935590eb16afc0c0108289f68c87e2a89a5 # v4.30.7
        if: always()
        with:
          sarif_file: 'trivy-config-results.sarif'

  trivy-secret-scan:
    name: Trivy Secret Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy secret scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-secret-results.sarif'
          scanners: 'secret'
          exit-code: '0'  # Don't fail the build on secrets
          
      - name: Upload Trivy secret scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@e296a935590eb16afc0c0108289f68c87e2a89a5 # v4.30.7
        if: always()
        with:
          sarif_file: 'trivy-secret-results.sarif'

  trivy-pr-comment:
    name: Trivy PR Comment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy scanner for PR comment
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Comment PR with Trivy results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const fs = require('fs');
            
            let trivyResults = '';
            try {
              trivyResults = fs.readFileSync('trivy-results.txt', 'utf8');
            } catch (error) {
              console.log('No Trivy results file found');
              return;
            }
            
            // Only comment if there are actual vulnerabilities
            if (trivyResults.includes('Total: 0')) {
              console.log('No vulnerabilities found, skipping comment');
              return;
            }
            
            const body = `## üîç Trivy Security Scan Results
            
            <details>
            <summary>Click to view detailed results</summary>
            
            \`\`\`
            ${trivyResults}
            \`\`\`
            
            </details>
            
            > **Note**: This scan shows CRITICAL and HIGH severity vulnerabilities only. 
            > Full results are available in the [Security tab](https://github.com/${context.repo.owner}/${context.repo.repo}/security/code-scanning).
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
